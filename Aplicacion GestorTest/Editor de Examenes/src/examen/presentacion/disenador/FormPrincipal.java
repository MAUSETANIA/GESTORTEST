/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package examen.presentacion.disenador;

import com.lowagie.tools.arguments.ImageFilter;
import examen.PDF.ExamenPDF;
import examen.negocio.Examen;
import examen.negocio.Pregunta;
import examen.negocio.Respuesta;
import examen.persistencia.ArchivoXML;
import examen.presentacion.administrarNotas.FormAdministrarNota;
import examen.presentacion.vistaImagenes.ImageFileView;
import examen.presentacion.vistaImagenes.ImagePreview;
import java.io.*;
import java.util.Vector;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultListModel;
import javax.swing.ImageIcon;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.tree.DefaultMutableTreeNode;
import javax.swing.tree.DefaultTreeModel;
import javax.swing.tree.TreePath;

/**
 *
 * @author Lorena
 */
public class FormPrincipal extends javax.swing.JFrame {

    /**
     * Creates new form FormPrincipal
     */
    
    private char[] indice = {'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J'};
    private Examen examen = new Examen();
    @SuppressWarnings("UseOfObsoleteCollectionType")
    private Vector<Pregunta> preguntas = new Vector<Pregunta>();
    @SuppressWarnings("UseOfObsoleteCollectionType")
    private Vector<Respuesta> respuestas = new Vector<Respuesta>();
    private ExamenPDF vp = new ExamenPDF();
    String dir = "C:\\GestorTest\\RESPUESTAS\\";
    public FormPrincipal() {
       
        initComponents();
         cargarDirectorioAsignatura();
        activarPanelTipo(cbxTipo.getSelectedIndex());
        setLocationRelativeTo(null);
        rbIncorrecto.setSelected(new Boolean("False"));
        rbCorrecto.setSelected(new Boolean("False"));
        
    }
    private void LimpiarPanelRespuesta(){
        if(cbxTipo.getSelectedIndex()==0||cbxTipo.getSelectedIndex()==1){
            txtRespuesta.setText("");
            ((DefaultListModel) listaRespuesta.getModel()).clear();
        }
    }
    private void activarPanelTipo(int tipo) {
      LimpiarPanelRespuesta();
        if(tipo==0 || tipo ==1){

           btnMarcar.setVisible(false);
           txtRespuesta.setVisible(true);
           LbRespuesta.setVisible(true);
           rbCorrecto.setVisible(true);
           rbIncorrecto.setVisible(true);
           btnAdicionarRespuesta.setVisible(true);
           btnEliminarRespuesta.setVisible(true);
           btnModificarRespuesta.setVisible(true);
           listaRespuesta.setVisible(true);
           

       }else
       {
           btnMarcar.setVisible(true);
           //panelRespuesta.setVisible(false);
           txtRespuesta.setVisible(false);
           LbRespuesta.setVisible(true);
           rbCorrecto.setVisible(false);
           rbIncorrecto.setVisible(false);
           btnAdicionarRespuesta.setVisible(false);
           btnEliminarRespuesta.setVisible(false);
           btnModificarRespuesta.setVisible(false);
           //listaRespuesta.setVisible(false);
       }
    }


    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jScrollPane3 = new javax.swing.JScrollPane();
        TreeExamenes = new javax.swing.JTree();
        panelEditor = new javax.swing.JPanel();
        panelPregunta = new javax.swing.JPanel();
        jLabel8 = new javax.swing.JLabel();
        cbxTipo = new javax.swing.JComboBox();
        jLabel2 = new javax.swing.JLabel();
        spinnerPuntaje = new javax.swing.JSpinner();
        txtImagen = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jLabelImagen = new javax.swing.JLabel();
        btnCargarImagen = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        textPregunta = new javax.swing.JTextArea();
        jLabel10 = new javax.swing.JLabel();
        btnMarcar = new javax.swing.JButton();
        panelRespuesta = new javax.swing.JPanel();
        btnEliminarRespuesta = new javax.swing.JButton();
        rbCorrecto = new javax.swing.JRadioButton();
        jScrollPane4 = new javax.swing.JScrollPane();
        listaRespuesta = new javax.swing.JList();
        btnAdicionarRespuesta = new javax.swing.JButton();
        rbIncorrecto = new javax.swing.JRadioButton();
        LbRespuesta = new javax.swing.JLabel();
        btnModificarRespuesta = new javax.swing.JButton();
        txtRespuesta = new javax.swing.JTextField();
        txtRutaExamen = new javax.swing.JTextField();
        tiempoExa = new javax.swing.JSpinner();
        jLabel3 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        txtNombreExa = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        txtNombreProfesor = new javax.swing.JTextField();
        jLabel11 = new javax.swing.JLabel();
        txtGrupo = new javax.swing.JTextField();
        jLabel12 = new javax.swing.JLabel();
        txtAsignatura = new javax.swing.JTextField();
        jScrollPane2 = new javax.swing.JScrollPane();
        listaPregunta = new javax.swing.JList();
        jLabel4 = new javax.swing.JLabel();
        btnNuevaPregunta = new javax.swing.JButton();
        btnAdicionarPregunta = new javax.swing.JButton();
        btnModificarPregunta = new javax.swing.JButton();
        btnEliminarPregunta = new javax.swing.JButton();
        btnBarGuardar = new javax.swing.JButton();
        btnBarNuevo = new javax.swing.JButton();
        btnBarAbrir = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();
        jMenuBar1 = new javax.swing.JMenuBar();
        menuNuevo = new javax.swing.JMenu();
        jMenuItemNuevo = new javax.swing.JMenuItem();
        jMenuItem4 = new javax.swing.JMenuItem();
        jMenuItem1 = new javax.swing.JMenuItem();
        jMenuItem2 = new javax.swing.JMenuItem();
        jMenu4 = new javax.swing.JMenu();
        jMenuItem9 = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createTitledBorder(""), "Examenes", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 3, 11), new java.awt.Color(102, 102, 255))); // NOI18N

        TreeExamenes.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                TreeExamenesMouseClicked(evt);
            }
        });
        jScrollPane3.setViewportView(TreeExamenes);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 203, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 488, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        panelEditor.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Editor Examen", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 3, 11), new java.awt.Color(102, 102, 255))); // NOI18N

        panelPregunta.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Pregunta", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 3, 11), new java.awt.Color(102, 102, 255))); // NOI18N

        jLabel8.setText("*Tipo:");

        cbxTipo.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Multiple", "Simple", "Completar" }));
        cbxTipo.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cbxTipoItemStateChanged(evt);
            }
        });

        jLabel2.setText("*Puntaje:");

        spinnerPuntaje.setModel(new javax.swing.SpinnerNumberModel(Float.valueOf(0.0f), Float.valueOf(0.0f), Float.valueOf(100.0f), Float.valueOf(0.5f)));

        txtImagen.setEditable(false);

        jLabel1.setText("Imagen:");

        jLabelImagen.setAutoscrolls(true);

        btnCargarImagen.setText("...");
        btnCargarImagen.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCargarImagenActionPerformed(evt);
            }
        });

        textPregunta.setColumns(5);
        textPregunta.setRows(5);
        jScrollPane1.setViewportView(textPregunta);

        jLabel10.setText("*Pregunta:");

        btnMarcar.setText("Completar");
        btnMarcar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnMarcarActionPerformed(evt);
            }
        });

        panelRespuesta.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Respuestas", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 3, 11), new java.awt.Color(102, 102, 255))); // NOI18N
        panelRespuesta.setEnabled(false);

        btnEliminarRespuesta.setText("Eliminar Respuesta");
        btnEliminarRespuesta.setEnabled(false);
        btnEliminarRespuesta.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEliminarRespuestaActionPerformed(evt);
            }
        });

        rbCorrecto.setText("Correcto [V]");

        listaRespuesta.setModel(new DefaultListModel());
        listaRespuesta.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        listaRespuesta.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                listaRespuestaValueChanged(evt);
            }
        });
        listaRespuesta.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                listaRespuestaFocusGained(evt);
            }
        });
        jScrollPane4.setViewportView(listaRespuesta);

        btnAdicionarRespuesta.setText("Adicionar Respuesta");
        btnAdicionarRespuesta.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAdicionarRespuestaActionPerformed(evt);
            }
        });

        rbIncorrecto.setSelected(true);
        rbIncorrecto.setText("Incorrecto [F]");

        LbRespuesta.setText("Respuesta:");

        btnModificarRespuesta.setText("Modificar Respuesta");
        btnModificarRespuesta.setEnabled(false);
        btnModificarRespuesta.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnModificarRespuestaActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout panelRespuestaLayout = new javax.swing.GroupLayout(panelRespuesta);
        panelRespuesta.setLayout(panelRespuestaLayout);
        panelRespuestaLayout.setHorizontalGroup(
            panelRespuestaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelRespuestaLayout.createSequentialGroup()
                .addGroup(panelRespuestaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panelRespuestaLayout.createSequentialGroup()
                        .addGap(14, 14, 14)
                        .addComponent(LbRespuesta)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtRespuesta, javax.swing.GroupLayout.DEFAULT_SIZE, 335, Short.MAX_VALUE))
                    .addGroup(panelRespuestaLayout.createSequentialGroup()
                        .addGap(9, 9, 9)
                        .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 123, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addGroup(panelRespuestaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(btnEliminarRespuesta, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(btnAdicionarRespuesta, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(btnModificarRespuesta)))
                    .addGroup(panelRespuestaLayout.createSequentialGroup()
                        .addComponent(rbCorrecto)
                        .addGap(18, 18, 18)
                        .addComponent(rbIncorrecto)))
                .addContainerGap())
        );
        panelRespuestaLayout.setVerticalGroup(
            panelRespuestaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelRespuestaLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panelRespuestaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtRespuesta, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(LbRespuesta))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(panelRespuestaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(rbCorrecto)
                    .addComponent(rbIncorrecto))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(panelRespuestaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(panelRespuestaLayout.createSequentialGroup()
                        .addComponent(btnAdicionarRespuesta)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnEliminarRespuesta)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnModificarRespuesta))
                    .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout panelPreguntaLayout = new javax.swing.GroupLayout(panelPregunta);
        panelPregunta.setLayout(panelPreguntaLayout);
        panelPreguntaLayout.setHorizontalGroup(
            panelPreguntaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelPreguntaLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panelPreguntaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1)
                    .addComponent(jLabel8))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(panelPreguntaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panelPreguntaLayout.createSequentialGroup()
                        .addComponent(cbxTipo, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(spinnerPuntaje, javax.swing.GroupLayout.PREFERRED_SIZE, 61, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(panelPreguntaLayout.createSequentialGroup()
                        .addComponent(txtImagen)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnCargarImagen, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(22, 22, 22))
            .addGroup(panelPreguntaLayout.createSequentialGroup()
                .addGroup(panelPreguntaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panelPreguntaLayout.createSequentialGroup()
                        .addComponent(jLabel10)
                        .addGap(6, 6, 6)
                        .addGroup(panelPreguntaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 248, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnMarcar)))
                    .addComponent(panelRespuesta, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabelImagen, javax.swing.GroupLayout.PREFERRED_SIZE, 127, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        panelPreguntaLayout.setVerticalGroup(
            panelPreguntaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelPreguntaLayout.createSequentialGroup()
                .addGroup(panelPreguntaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8)
                    .addComponent(spinnerPuntaje, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2)
                    .addComponent(cbxTipo, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(11, 11, 11)
                .addGroup(panelPreguntaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(btnCargarImagen)
                    .addComponent(txtImagen, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(panelPreguntaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panelPreguntaLayout.createSequentialGroup()
                        .addGroup(panelPreguntaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel10)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnMarcar)
                        .addGap(18, 18, 18)
                        .addComponent(panelRespuesta, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jLabelImagen, javax.swing.GroupLayout.PREFERRED_SIZE, 126, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        txtRutaExamen.setEditable(false);
        txtRutaExamen.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N

        tiempoExa.setModel(new javax.swing.SpinnerNumberModel(1, 1, 120, 1));

        jLabel3.setText("Ruta:");

        jLabel5.setText("Nombre Examen");

        jLabel6.setText("Duracion");

        jLabel7.setText("Minutos");

        jLabel9.setText("Profesor");

        jLabel11.setText("Grupo");

        jLabel12.setText("Asignatura");

        listaPregunta.setModel(new DefaultListModel());
        listaPregunta.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        listaPregunta.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                listaPreguntaValueChanged(evt);
            }
        });
        listaPregunta.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                listaPreguntaFocusGained(evt);
            }
        });
        jScrollPane2.setViewportView(listaPregunta);

        jLabel4.setFont(new java.awt.Font("SansSerif", 3, 11)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(102, 102, 255));
        jLabel4.setText("Preguntas");

        btnNuevaPregunta.setText("Nuevo");
        btnNuevaPregunta.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNuevaPreguntaActionPerformed(evt);
            }
        });

        btnAdicionarPregunta.setText("Adicionar Pregunta");
        btnAdicionarPregunta.setEnabled(false);
        btnAdicionarPregunta.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAdicionarPreguntaActionPerformed(evt);
            }
        });

        btnModificarPregunta.setText("Modificar Pregunta");
        btnModificarPregunta.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnModificarPreguntaActionPerformed(evt);
            }
        });

        btnEliminarPregunta.setText("Eliminar Pregunta");
        btnEliminarPregunta.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEliminarPreguntaActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout panelEditorLayout = new javax.swing.GroupLayout(panelEditor);
        panelEditor.setLayout(panelEditorLayout);
        panelEditorLayout.setHorizontalGroup(
            panelEditorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelEditorLayout.createSequentialGroup()
                .addGroup(panelEditorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panelEditorLayout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(panelEditorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(panelEditorLayout.createSequentialGroup()
                                .addComponent(jLabel3)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(txtRutaExamen, javax.swing.GroupLayout.PREFERRED_SIZE, 565, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(panelEditorLayout.createSequentialGroup()
                                .addGroup(panelEditorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel5)
                                    .addComponent(jLabel9)
                                    .addComponent(jLabel12))
                                .addGap(18, 18, 18)
                                .addGroup(panelEditorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(txtNombreExa, javax.swing.GroupLayout.PREFERRED_SIZE, 226, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(panelEditorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                        .addComponent(txtAsignatura, javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(txtNombreProfesor, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 225, Short.MAX_VALUE)))
                                .addGap(18, 18, 18)
                                .addGroup(panelEditorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel11)
                                    .addComponent(jLabel6))
                                .addGap(18, 18, 18)
                                .addGroup(panelEditorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(panelEditorLayout.createSequentialGroup()
                                        .addComponent(tiempoExa, javax.swing.GroupLayout.PREFERRED_SIZE, 61, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(jLabel7))
                                    .addComponent(txtGrupo, javax.swing.GroupLayout.PREFERRED_SIZE, 198, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                    .addGroup(panelEditorLayout.createSequentialGroup()
                        .addGroup(panelEditorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(panelEditorLayout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(jLabel4))
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnNuevaPregunta, javax.swing.GroupLayout.PREFERRED_SIZE, 123, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnAdicionarPregunta)
                            .addComponent(btnModificarPregunta)
                            .addComponent(btnEliminarPregunta, javax.swing.GroupLayout.PREFERRED_SIZE, 121, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(20, 20, 20)
                        .addComponent(panelPregunta, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addContainerGap(17, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        panelEditorLayout.setVerticalGroup(
            panelEditorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelEditorLayout.createSequentialGroup()
                .addGroup(panelEditorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panelEditorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel3)
                        .addComponent(txtRutaExamen, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(panelEditorLayout.createSequentialGroup()
                        .addGap(30, 30, 30)
                        .addGroup(panelEditorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel5)
                            .addComponent(txtNombreExa, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel6)
                            .addComponent(tiempoExa, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel7))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(panelEditorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtNombreProfesor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel9)
                    .addComponent(jLabel11)
                    .addComponent(txtGrupo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(14, 14, 14)
                .addGroup(panelEditorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel12)
                    .addComponent(txtAsignatura, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(panelEditorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panelEditorLayout.createSequentialGroup()
                        .addGap(5, 5, 5)
                        .addComponent(jLabel4)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 206, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(btnNuevaPregunta)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnAdicionarPregunta)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnModificarPregunta)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnEliminarPregunta))
                    .addGroup(panelEditorLayout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(panelPregunta, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(0, 0, Short.MAX_VALUE))
        );

        btnBarGuardar.setFont(new java.awt.Font("Tahoma", 1, 8)); // NOI18N
        btnBarGuardar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/ImgBarra/Guardar.png"))); // NOI18N
        btnBarGuardar.setText("Guardar");
        btnBarGuardar.setFocusable(false);
        btnBarGuardar.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnBarGuardar.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btnBarGuardar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBarGuardarActionPerformed(evt);
            }
        });

        btnBarNuevo.setFont(new java.awt.Font("Tahoma", 1, 8)); // NOI18N
        btnBarNuevo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/ImgBarra/Nuevo.gif"))); // NOI18N
        btnBarNuevo.setText("Nuevo");
        btnBarNuevo.setFocusable(false);
        btnBarNuevo.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnBarNuevo.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btnBarNuevo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBarNuevoActionPerformed(evt);
            }
        });

        btnBarAbrir.setFont(new java.awt.Font("Tahoma", 1, 8)); // NOI18N
        btnBarAbrir.setIcon(new javax.swing.ImageIcon(getClass().getResource("/ImgBarra/abrir.png"))); // NOI18N
        btnBarAbrir.setText("Abrir");
        btnBarAbrir.setFocusable(false);
        btnBarAbrir.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnBarAbrir.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btnBarAbrir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBarAbrirActionPerformed(evt);
            }
        });

        jButton1.setFont(new java.awt.Font("Tahoma", 1, 8)); // NOI18N
        jButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/ImgBarra/Eliminar.gif"))); // NOI18N
        jButton1.setText("Eliminar");
        jButton1.setFocusable(false);
        jButton1.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jButton1.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        menuNuevo.setText("Archivo");

        jMenuItemNuevo.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_N, java.awt.event.InputEvent.CTRL_MASK));
        jMenuItemNuevo.setText("Gestionar Examen");
        jMenuItemNuevo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItemNuevoActionPerformed(evt);
            }
        });
        menuNuevo.add(jMenuItemNuevo);

        jMenuItem4.setText("Gestionar Asignatura");
        jMenuItem4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem4ActionPerformed(evt);
            }
        });
        menuNuevo.add(jMenuItem4);

        jMenuItem1.setText("Generar PDF");
        jMenuItem1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem1ActionPerformed(evt);
            }
        });
        menuNuevo.add(jMenuItem1);

        jMenuItem2.setText("Administrar Notas");
        jMenuItem2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem2ActionPerformed(evt);
            }
        });
        menuNuevo.add(jMenuItem2);

        jMenuBar1.add(menuNuevo);

        jMenu4.setText("Help");

        jMenuItem9.setText("Acerca de..");
        jMenu4.add(jMenuItem9);

        jMenuBar1.add(jMenu4);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(panelEditor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(btnBarNuevo)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnBarAbrir, javax.swing.GroupLayout.PREFERRED_SIZE, 62, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnBarGuardar, javax.swing.GroupLayout.PREFERRED_SIZE, 69, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton1)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(6, 6, 6)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnBarGuardar, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnBarNuevo, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnBarAbrir, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(panelEditor, javax.swing.GroupLayout.DEFAULT_SIZE, 0, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
    private void Nuevo(){
        FormNuevoExamen form = new FormNuevoExamen(this, true);
        form.setVisible(true);
        cargarDirectorioAsignatura();
        LimpiarEditor();
    }
    private void LimpiarDatosExamen(){
        txtRutaExamen.setText("");
        txtNombreExa.setText("");
        tiempoExa.setValue(1);
        txtNombreProfesor.setText("");
        txtAsignatura.setText("");
        txtGrupo.setText("");
    }

    private void LimpiarPanelPregunta(){
        cbxTipo.setSelectedIndex(0);
        textPregunta.setText("");
        spinnerPuntaje.getModel().setValue(0);
        txtImagen.setText("");
        jLabelImagen.setIcon(null);
    }
    private void LimpiarEditor() {
        LimpiarDatosExamen();
        LimpiarPanelPregunta();
        ((DefaultListModel) listaPregunta.getModel()).clear();
        //LimpiarPanelRespuesta();
    }
    private boolean cargarExamenes(DefaultMutableTreeNode node, File f) {
        File[] files = f.listFiles();
        if (files != null && files.length > 0) {
            for (int i = 0; i < files.length; i++) {
                DefaultMutableTreeNode curr =
                        new DefaultMutableTreeNode(files[i].getName());
                cargarExamenes(curr, files[i]);
                node.add(curr);
            }
        }
        return true;
    }
    public void cargarDirectorioAsignatura() {
        File file = new File("C:\\GestorTest\\ASIGNATURA");
        file.mkdir();
        DefaultMutableTreeNode node = new DefaultMutableTreeNode(file.getName());
        cargarExamenes(node, file);
        DefaultTreeModel model = new DefaultTreeModel(node);
        TreeExamenes.setModel(model);
    }
    private void jMenuItemNuevoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItemNuevoActionPerformed
        // TODO add your handling code here:
        Nuevo();
    }//GEN-LAST:event_jMenuItemNuevoActionPerformed

    private void jMenuItem4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem4ActionPerformed
        // TODO add your handling code here:
        String nombreCapeta = JOptionPane.showInputDialog("Nombre de la Asignatura");
        if (nombreCapeta == null || nombreCapeta.equals("")) {
            return;
        }
        File Carpeta = new File("C:\\GestorTest\\ASIGNATURA\\" + nombreCapeta);
        Carpeta.mkdir();
        cargarDirectorioAsignatura();
        System.out.println("adicionando");
    }//GEN-LAST:event_jMenuItem4ActionPerformed

    private void TreeExamenesMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_TreeExamenesMouseClicked
        // TODO add your handling code here:
        if (evt.getClickCount() == 2 && !TreeExamenes.isSelectionEmpty()) {
            LimpiarEditor();
            TreePath path = TreeExamenes.getSelectionPath();
            String direccion = "C:\\GestorTest\\";
            for (int i = 0; i < path.getPathCount(); i++) {
                direccion = direccion + "/" + path.getPathComponent(i);
                System.out.println(path.getPathComponent(i));
            }
            File file = new File(direccion);
            if (file.isFile()) {
                txtRutaExamen.setText(file.getPath());
                examen = ArchivoXML.abrirXML(file.getPath());
                actualizarEditor();
            }
        }
    }//GEN-LAST:event_TreeExamenesMouseClicked
    public void ActualizarDatosExa(){
        txtNombreExa.setText(examen.getDescripcion());
        txtNombreProfesor.setText(examen.getProfesor());
        txtAsignatura.setText(examen.getAsignatura());
        txtGrupo.setText(examen.getGrupo());
        tiempoExa.setValue(examen.getTiempo());
    }
    private void actualizarEditor() {
        //tiempoExa.setValue(new Integer(examen.getTiempo()));
        ActualizarDatosExa();
        preguntas = examen.getPreguntas();
        ((DefaultListModel) listaPregunta.getModel()).clear();
        for (int i = 0; i < preguntas.size(); i++) {
            ((DefaultListModel) listaPregunta.getModel()).add(i, i + 1);
        }
        if(preguntas.size()>0){
            Pregunta p0=preguntas.get(0);
            textPregunta.setText(p0.getTexto());
            cbxTipo.setSelectedIndex(p0.getTipo()-1);
            spinnerPuntaje.setValue(p0.getPuntos());
            if(p0.getImagen()!=null){
                try {
                    ImageIcon images = new ImageIcon(otraImagen.imageString(p0.getImagen()));
                    jLabelImagen.setIcon(images);
                } catch (Exception e) {
                    System.out.print("Error al cargar Imagen");
                }
            
            }
        
        }

    }
    private void cbxTipoItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cbxTipoItemStateChanged
        activarPanelTipo(cbxTipo.getSelectedIndex());
    }//GEN-LAST:event_cbxTipoItemStateChanged

    private void btnCargarImagenActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCargarImagenActionPerformed

        JFileChooser fsh = new JFileChooser();
        fsh.addChoosableFileFilter(new ImageFilter());
        fsh.setFileView(new ImageFileView());
        fsh.setAccessory(new ImagePreview(fsh));
        if (fsh.showOpenDialog(null) == JFileChooser.APPROVE_OPTION) {

            File ff = fsh.getSelectedFile();
            String path = ff.getPath();
            txtImagen.setText(path);
            // jLabelImagen.setIcon(new javax.swing.ImageIcon(getClass().getResource(path)));

        } else {
            txtImagen.setText("");

        }

    }//GEN-LAST:event_btnCargarImagenActionPerformed
    public String QuitarEspacio(String s){
     if(s.charAt(s.length()-1)==' '){
      int i = s.length()-1;
      while(i > 0 && s.charAt(i)==' ') {
          i--;
      }
     s= s.substring(0, i);

        }
        return s ;
    }
    private void btnMarcarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnMarcarActionPerformed
        // TODO add your handling code here:
        String resC = JOptionPane.showInputDialog(null, "Ingrese la palabra para completar", "Adicionar Respuesta", 2);
        if (resC.equals(null)) {
            return;
        }

        String texto = QuitarEspacio(textPregunta.getText());
        texto = texto + " ";
        resC = "*" + resC;
        textPregunta.setText(texto + resC);

        //adicionar respuesta
/*
         * Pregunta p= new Pregunta();
         * p=preguntas.get(listaPregunta.getSelectedIndex()); Respuesta r=new
         * Respuesta(); r.setRespuesta(resC);
         *
         * p.addRespuesta(r); //actualizar lista respuesta ((DefaultListModel)
         * listaRespuesta.getModel()).clear(); for (int i = 0; i <
         * p.getRespuestas().size(); i++) { ((DefaultListModel)
         * listaRespuesta.getModel()).add(i+1,p.getRespuestas().get(i).getRespuesta());
        }
         */


    }//GEN-LAST:event_btnMarcarActionPerformed
     private void actualizarListaRespuestas(Pregunta pregunta) {
        respuestas = pregunta.getRespuestas();
        if(pregunta.getTipo()==1||pregunta.getTipo()==2){
        //System.out.println(respuestas.size());
        ((DefaultListModel) listaRespuesta.getModel()).clear();///////
        for (int i = 0; i < respuestas.size(); i++) {
            ((DefaultListModel) listaRespuesta.getModel()).add(i, indice[i]);
        }
        }else{
            ((DefaultListModel) listaRespuesta.getModel()).clear();
             for (int i = 0; i < respuestas.size(); i++) {
                  ((DefaultListModel) listaRespuesta.getModel()).add(i,pregunta.getRespuestas().get(i).getRespuesta());
             }

        }
    }
    private void listaPreguntaValueChanged(javax.swing.event.ListSelectionEvent evt) {//GEN-FIRST:event_listaPreguntaValueChanged
         if (listaPregunta.getSelectedIndex() >= 0) {
        
        Pregunta p = preguntas.get(listaPregunta.getSelectedIndex());
        actualizarListaRespuestas(p);
        txtRespuesta.setText("");
        textPregunta.setText(p.getTexto());
        if(p.getImagen()!=null){
            try {
                ImageIcon images = new ImageIcon(otraImagen.imageString(p.getImagen()));
                jLabelImagen.setIcon(images);
                txtImagen.setText("con Imagen");
            } catch (Exception e) {
                System.out.print("FormPrincipal: Error al cargar la imagen");
            }
        }else{
            txtImagen.setText("Sin Imagen");

        }
        
        spinnerPuntaje.setValue((Float) p.getPuntos());
        cbxTipo.setSelectedIndex(p.getTipo() - 1);

        //actualizar botones
        btnNuevaPregunta.setEnabled(true);
        btnAdicionarPregunta.setEnabled(false);
        btnEliminarPregunta.setEnabled(true);
        btnModificarPregunta.setEnabled(true);
        panelRespuesta.setEnabled(true);
    }
    }//GEN-LAST:event_listaPreguntaValueChanged

    private void listaPreguntaFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_listaPreguntaFocusGained
        if (listaPregunta.getSelectedIndex() >= 0) {
            //btnEditarRespuesta.setEnabled(true);
            // btnEliminarPregunta.setEnabled(true);
        }
    }//GEN-LAST:event_listaPreguntaFocusGained
    public static String cadenaImagen(String pathname) throws FileNotFoundException, IOException {
        File file = new File(pathname);
        byte[] imageData = new byte[(int) file.length()];
        DataInputStream in = new DataInputStream(new FileInputStream(file));
        in.readFully(imageData);
        in.close();
        String imageDataString = new sun.misc.BASE64Encoder().encode(imageData);
        return imageDataString;
    }
    private boolean validarDatosPregunta(){
        return ((!spinnerPuntaje.getValue().toString().equals("0")) && (!textPregunta.getText().equals("")));
    }
    private void btnAdicionarPreguntaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAdicionarPreguntaActionPerformed
        if (validarDatosPregunta()) {
            Pregunta pregunta = new Pregunta();
            pregunta.setTipo(cbxTipo.getSelectedIndex() + 1);
            pregunta.setPuntos((Float) spinnerPuntaje.getValue());
            if (!txtImagen.getText().equals("")) {
                try {
                    String imgString = cadenaImagen(txtImagen.getText().trim());
                    pregunta.setImagen(imgString);
                } catch (Exception e) {
                    System.out.println("Error al cargar la imagen");
                }
            }

            pregunta.PonerTexto(pregunta.getTipo(), textPregunta.getText());
            preguntas.addElement(pregunta);
            DefaultListModel model = (DefaultListModel) listaPregunta.getModel();
            model.addElement(model.getSize() + 1);
            listaPregunta.setSelectedIndex(model.getSize() - 1);

            //actualizar botones
            btnNuevaPregunta.setEnabled(true);
            btnAdicionarPregunta.setEnabled(true);
            btnEliminarPregunta.setEnabled(true);
            btnModificarPregunta.setEnabled(true);
        } else {
            JOptionPane.showMessageDialog(null, "Ingrese todos los Datos de la pregunta");
        }

    }//GEN-LAST:event_btnAdicionarPreguntaActionPerformed

    private void btnEliminarPreguntaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEliminarPreguntaActionPerformed
        int r = JOptionPane.showConfirmDialog(null, "¿Eliminar Pregunta?", "Eliminar Pregunta", 2);
        if (r == 1) {
            return;
        }
        int n = listaPregunta.getSelectedIndex();
        if (n == -1) {
            return;
        }
        preguntas.remove(n);
        //actualizar lista preguntas
        ((DefaultListModel) listaPregunta.getModel()).clear();
        for (int i = 0; i < preguntas.size(); i++) {
            ((DefaultListModel) listaPregunta.getModel()).add(i, i + 1);
        }
        btnNuevaPregunta.setEnabled(true);
        btnAdicionarPregunta.setEnabled(true);
        btnEliminarPregunta.setEnabled(false);
        btnModificarPregunta.setEnabled(true);
    }//GEN-LAST:event_btnEliminarPreguntaActionPerformed

    private void btnNuevaPreguntaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNuevaPreguntaActionPerformed
        LimpiarPanelPregunta();
        //LimpiarPanelRespuesta();
        btnNuevaPregunta.setEnabled(false);
        btnAdicionarPregunta.setEnabled(true);
        btnEliminarPregunta.setEnabled(false);
        btnModificarPregunta.setEnabled(false);
    }//GEN-LAST:event_btnNuevaPreguntaActionPerformed

    private void btnModificarPreguntaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnModificarPreguntaActionPerformed
        int seleccion = listaPregunta.getSelectedIndex();
        if (seleccion != -1) {
            preguntas.get(seleccion).setTipo(cbxTipo.getSelectedIndex() + 1);
            preguntas.get(seleccion).PonerTexto(cbxTipo.getSelectedIndex() - 1, textPregunta.getText());
            preguntas.get(seleccion).setPuntos((Float) spinnerPuntaje.getValue());

            try {
                String imgString = cadenaImagen(txtImagen.getText().trim());
                preguntas.get(seleccion).setImagen(imgString);
            } catch (Exception e) {
                System.out.println("Error al cargar la imagen");
            }

            //actualizar botones
            btnModificarPregunta.setEnabled(false);
            btnNuevaPregunta.setEnabled(true);
            btnAdicionarPregunta.setEnabled(false);
            btnEliminarPregunta.setEnabled(true);
        }
    }//GEN-LAST:event_btnModificarPreguntaActionPerformed
    private void GuardarExamen(){
         if (txtRutaExamen.getText().trim().length() > 0) {
            int r=JOptionPane.showConfirmDialog(null,"¿Guardar examen "+examen.getDescripcion()+"?","Guardar Examen",2);
            if(r==0){
                examen.setAllPreguntas(preguntas);
                ArchivoXML.guardarXML(examen, txtRutaExamen.getText().trim(), "");
               
            }
        }
    }
    private void btnBarGuardarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBarGuardarActionPerformed
        GuardarExamen();
    }//GEN-LAST:event_btnBarGuardarActionPerformed

    private void jMenuItem1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem1ActionPerformed
        // TODO add your handling code here:
         
       try {
            vp.pdfExamen(examen, "C:\\GestorTest\\EXAMEN PDF\\" + examen.getDescripcion() + ".pdf");
        } catch (IOException ex) {
            Logger.getLogger(FormPrincipal.class.getName()).log(Level.SEVERE, null, ex);
        }
        
    }//GEN-LAST:event_jMenuItem1ActionPerformed

    private void jMenuItem2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem2ActionPerformed
        // TODO add your handling code here:
         new FormAdministrarNota(dir).setVisible(true);
    }//GEN-LAST:event_jMenuItem2ActionPerformed

    private void btnEliminarRespuestaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEliminarRespuestaActionPerformed
        int r = JOptionPane.showConfirmDialog(null, "¿EliminarRespuesta?", "Eliminar Respuesta", 2);
        if (r == 1) {
            return;
        }
        int seleccion = listaRespuesta.getSelectedIndex();
        if (seleccion == -1) {
            return;
        }
        Pregunta p = new Pregunta();
        p = preguntas.get(listaPregunta.getSelectedIndex());
        p.getRespuestas().remove(seleccion);
        DefaultListModel model = (DefaultListModel) listaRespuesta.getModel();
        model.remove(seleccion);
        txtRespuesta.setText("");
        rbIncorrecto.setSelected(true);



        btnAdicionarRespuesta.setEnabled(true);
        btnEliminarRespuesta.setEnabled(false);
        btnModificarRespuesta.setEnabled(true);

    }//GEN-LAST:event_btnEliminarRespuestaActionPerformed

    private void listaRespuestaValueChanged(javax.swing.event.ListSelectionEvent evt) {//GEN-FIRST:event_listaRespuestaValueChanged
        if (listaRespuesta.getSelectedIndex() >= 0) {
            Respuesta r = respuestas.get(listaRespuesta.getSelectedIndex());
            txtRespuesta.setText(r.getRespuesta());
            if (r.isCorrecto()) {
                rbCorrecto.setSelected(true);
            } else {
                rbIncorrecto.setSelected(true);
            }

            btnAdicionarRespuesta.setEnabled(true);
            btnEliminarRespuesta.setEnabled(true);
            btnModificarRespuesta.setEnabled(true);
        }
    }//GEN-LAST:event_listaRespuestaValueChanged

    private void listaRespuestaFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_listaRespuestaFocusGained
        if (listaRespuesta.getSelectedIndex() >= 0) {
            btnModificarRespuesta.setEnabled(true);
            btnEliminarRespuesta.setEnabled(true);
        }
    }//GEN-LAST:event_listaRespuestaFocusGained

    
    private void actualizarCampos() {
        if (textPregunta.getText().trim().length() > 0 && listaRespuesta.getModel().getSize() > 0) {
            btnAdicionarPregunta.setEnabled(true);
        } else {
            btnAdicionarPregunta.setEnabled(false);
        }
    }
    public void Limpiarbotones(){
     rbIncorrecto.setSelected(new Boolean("False"));
        rbCorrecto.setSelected(new Boolean("False"));
    }
    private void btnAdicionarRespuestaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAdicionarRespuestaActionPerformed

        if (!txtRespuesta.getText().equals("")) {
            Respuesta respuesta = new Respuesta(txtRespuesta.getText().trim());
            respuesta.setCorrecto(rbCorrecto.isSelected());
            respuesta.setMarcado(false);
            respuesta.setCompletado("");
            respuestas.addElement(respuesta);
            btnModificarRespuesta.setEnabled(false);
            btnEliminarRespuesta.setEnabled(false);
            txtRespuesta.setText("");
            rbIncorrecto.setSelected(true);
            DefaultListModel model = (DefaultListModel) listaRespuesta.getModel();
            model.addElement(indice[model.getSize()]);
            actualizarCampos();

            //actualizar botones

            btnAdicionarRespuesta.setEnabled(true);
            btnEliminarRespuesta.setEnabled(false);
            btnModificarRespuesta.setEnabled(false);
            Limpiarbotones();

        } else {
            JOptionPane.showMessageDialog(null, "Ingrese el texto de la respuesta");
        }
    }//GEN-LAST:event_btnAdicionarRespuestaActionPerformed

    private void btnModificarRespuestaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnModificarRespuestaActionPerformed
        int seleccion = listaRespuesta.getSelectedIndex();
        if (seleccion == -1) {
            return;
        }
        Pregunta p = new Pregunta();
        p = preguntas.get(listaPregunta.getSelectedIndex());
        p.getRespuestas().get(seleccion).setRespuesta(txtRespuesta.getText());
        p.getRespuestas().get(seleccion).setCorrecto(rbCorrecto.isSelected());
        p.getRespuestas().get(seleccion).setMarcado(false);

        //actualizarListaRespuestas(p);

        btnAdicionarRespuesta.setEnabled(true);
        btnModificarRespuesta.setEnabled(false);
        btnEliminarRespuesta.setEnabled(true);
    }//GEN-LAST:event_btnModificarRespuestaActionPerformed

    private void btnBarNuevoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBarNuevoActionPerformed
        Nuevo();
    }//GEN-LAST:event_btnBarNuevoActionPerformed

    
    public void Abrir(){
        JFileChooser jf = new JFileChooser();
        int res = jf.showOpenDialog(this);
        if (res == jf.APPROVE_OPTION) {
            String n=jf.getSelectedFile().getName();
            String ext=n.substring(n.indexOf('.')+1, n.length());
            if(ext.equals("test")){
              examen=new Examen();
              String path=jf.getSelectedFile().getAbsolutePath();
              examen = ArchivoXML.abrirXML(path);
              txtRutaExamen.setText(path);
              actualizarEditor();
            }else{
                JOptionPane.showMessageDialog(this, "Tipo de Archivo es incorrecto. Se requiere archivo *.test");
            }
        }

    }
    private void btnBarAbrirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBarAbrirActionPerformed
        Abrir();
    }//GEN-LAST:event_btnBarAbrirActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton1ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /*
         * Set the Nimbus look and feel
         */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /*
         * If Nimbus (introduced in Java SE 6) is not available, stay with the
         * default look and feel. For details see
         * http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(FormPrincipal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(FormPrincipal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(FormPrincipal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FormPrincipal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /*
         * Create and display the form
         */
        java.awt.EventQueue.invokeLater(new Runnable() {

            public void run() {
                new FormPrincipal().setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel LbRespuesta;
    private javax.swing.JTree TreeExamenes;
    private javax.swing.JButton btnAdicionarPregunta;
    private javax.swing.JButton btnAdicionarRespuesta;
    private javax.swing.JButton btnBarAbrir;
    private javax.swing.JButton btnBarGuardar;
    private javax.swing.JButton btnBarNuevo;
    private javax.swing.JButton btnCargarImagen;
    private javax.swing.JButton btnEliminarPregunta;
    private javax.swing.JButton btnEliminarRespuesta;
    private javax.swing.JButton btnMarcar;
    private javax.swing.JButton btnModificarPregunta;
    private javax.swing.JButton btnModificarRespuesta;
    private javax.swing.JButton btnNuevaPregunta;
    private javax.swing.JComboBox cbxTipo;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JLabel jLabelImagen;
    private javax.swing.JMenu jMenu4;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JMenuItem jMenuItem2;
    private javax.swing.JMenuItem jMenuItem4;
    private javax.swing.JMenuItem jMenuItem9;
    private javax.swing.JMenuItem jMenuItemNuevo;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JList listaPregunta;
    private javax.swing.JList listaRespuesta;
    private javax.swing.JMenu menuNuevo;
    private javax.swing.JPanel panelEditor;
    private javax.swing.JPanel panelPregunta;
    private javax.swing.JPanel panelRespuesta;
    private javax.swing.JRadioButton rbCorrecto;
    private javax.swing.JRadioButton rbIncorrecto;
    private javax.swing.JSpinner spinnerPuntaje;
    private javax.swing.JTextArea textPregunta;
    private javax.swing.JSpinner tiempoExa;
    private javax.swing.JTextField txtAsignatura;
    private javax.swing.JTextField txtGrupo;
    private javax.swing.JTextField txtImagen;
    private javax.swing.JTextField txtNombreExa;
    private javax.swing.JTextField txtNombreProfesor;
    private javax.swing.JTextField txtRespuesta;
    private javax.swing.JTextField txtRutaExamen;
    // End of variables declaration//GEN-END:variables
}
